//#072 Edit Distance
//Dynamic Programming: O(mn)

class Solution {
public:
    int minDistance(string word1, string word2) {
        int len1 = word1.size();
        int len2 = word2.size();
        
        if(len1 == 0) return len2;
        if(len2 == 0) return len1;
        
        int index = 1;
        vector<int> arr1(len1+1);
        for(int i = 0; i < len1+1; i++) arr1[i] = i;
        vector<int> arr2(len1+1);
        
        while( index < len2+1 ){
            int m = index % 2;
            if( m == 1 ) {
                for( int i = 0; i < len1+1; i++){
                    if(i == 0) arr2[i] = index;
                    else{
                        if( word1[i-1] == word2[index - 1] ){
                            arr2[i] = arr1[i-1];
                        }
                        else{
                            int ans1 = arr1[i-1] + 1;
                            int ans2 = arr1[i] + 1;
                            int ans3 = arr2[i-1] + 1;
                            if(ans1 < ans2){
                                arr2[i] = ans1<ans3?ans1:ans3;
                            }
                            else{
                                arr2[i] = ans2<ans3?ans2:ans3;
                            }
                        }
                    }
                }
            }
            else{
                for( int i = 0; i < len1+1; i++){
                    if(i == 0) arr1[i] = index;
                    else{
                        if( word1[i-1] == word2[index - 1] ){
                            arr1[i] = arr2[i-1];
                        }
                        else{
                            int ans1 = arr2[i-1] + 1;
                            int ans2 = arr2[i] + 1;
                            int ans3 = arr1[i-1] + 1;
                            if(ans1 < ans2){
                                arr1[i] = ans1<ans3?ans1:ans3;
                            }
                            else{
                                arr1[i] = ans2<ans3?ans2:ans3;
                            }
                        }
                    }
                }
            }
            
            
            
            index++;
        }
        
        if(index % 2 ==1) return arr1[len1];
        else return arr2[len1];
    }
};
