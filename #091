// #091 Decode Ways
// DP

class Solution {
public:
    int numDecodings(string s) {
        int len = s.size();
        
        if(len == 0) return 0;
        if(len == 1){
            return s[0] - '0' > 0? 1 : 0;
        }
        
        //int* decode = new int[len+1];
        //decode[0] = 1;
        //decode[1] = s[len-1] - '0' > 0? 1 : 0;
        int first = 1;
        int second = s[len-1] - '0' > 0? 1 : 0;
        
        for(int i = 2; i < len+1; i++){
            int digit1 = s[len-i] - '0';
            if(digit1 == 0){
                first = second;
                second = 0;
                continue;
            }
            
            int digit2 = s[len-i+1] - '0';
            
            if(digit1 * 10 + digit2 <= 26){
                int temp = second;
                second += first;
                first = temp;
            }
            else{
                first = second;
            }
        }
        
        return second;
    }
};
