//#035 Search Insert Position
//二分法找位置

class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int res=0;
        
        int n=nums.size();
        if(nums[0]>=target) return 0;
        if(nums[n-1]<target) return n;
        if(nums[n-1]==target) return n-1;
        
        int l=0;
        int r=n-1;
        while(l<=r){
            int m=(l+r)/2;
            if(nums[m]==target){
                res=m;
                break;
            }
            else if(nums[m]<target){
                if(m==n-1 || nums[m+1]>=target){
                    if(m==n-1){
                        res=n-1;
                        break;
                    }
                    else{
                        res=m+1;
                        break;
                    }
                }
                else{
                    l=m+1;
                }
            }
            else{
                if(m==0 || nums[m-1]<target){
                    if(m==0){
                        res=0;
                        break;
                    }
                    else{
                        res=m;
                        break;
                    }
                }
                else{
                    r=m-1;
                }
            }
        }
        
        return res;
    }
};
