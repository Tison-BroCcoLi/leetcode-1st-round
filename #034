//#034 Search for a Range
//二分查找，分别找左边界和右边界

class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> res(2,-1);
        
        int n=nums.size();
        if(target<nums[0] && target>nums[n-1]){
            return res;
        }
        
        int l=0;
        int r=n-1;
        
        while(l<=r){
            int m=(l+r)/2;
            if(nums[m]==target){
                if(m==0 || nums[m-1]<target){
                    res[0]=m;
                    break;
                }
                else{
                    r=m-1;
                }
            }
            
            else if(nums[m]>target){
                r=m-1;
            }
            else{
                l=m+1;
            }
        }
        
        l=0;
        r=n-1;
        while(l<=r){
            int m=(l+r)/2;
            if(nums[m]==target){
                if(m==n-1 || nums[m+1]>target){
                    res[1]=m;
                    break;
                }
                else{
                    l=m+1;
                }
            }
            
            else if(nums[m]>target){
                r=m-1;
            }
            else{
                l=m+1;
            }
        }
        return res;
    }
};
