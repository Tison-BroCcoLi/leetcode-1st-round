//#029 Divide Two Integers

//最直接的是用减法，超时了
//用移位，防溢出一般就用long，否则要出问题（没换成long就超时，换了就不超时，是由于移位操作导致了溢出）

class Solution {
public:
    int divide(int dividend, int divisor) {
        if(dividend==INT_MIN && divisor==-1) return INT_MAX;
        if(divisor==0) return INT_MAX;
        if(dividend==0) return 0;
        
        if(dividend>0 && divisor>0){
            int res=0;
            long long ldividend=dividend;
            long long ldivisor=divisor;
            while(ldividend>ldivisor){
                int res1=1;
                int shift=1;
                while(ldividend>(ldivisor<<shift)){
                    res1<<=1;
                    shift++;
                }
                if(ldividend==(ldivisor<<shift)){
                    res1<<=1;
                    res+=res1;
                    break;
                }
                else{
                    shift--;
                    res+=res1;
                    ldividend-=(ldivisor<<shift);
                }
            }
            if(ldividend==ldivisor) res++;
            return res;
        }
        
        if(dividend>0 && divisor<0){
            if(divisor==INT_MIN) return 0;
            else return -divide(dividend,-divisor);
        }
        
        if(dividend<0 && divisor>0){
            if(dividend==INT_MIN) return -(1+divide(-(dividend+divisor),divisor));
            else return -divide(-dividend,divisor);
        }
        
        if(dividend<0 && divisor<0){
            if(dividend==INT_MIN && divisor==INT_MIN) return 1;
            if(dividend==INT_MIN) return 1+divide(-(dividend-divisor),-divisor);
            if(divisor==INT_MIN) return 0;
            else return divide(-dividend,-divisor);
        }
    }
};
