//#047 Permutations II
//similar as #046

class Solution {
public:
    vector<vector<int>> permuteUnique(vector<int>& nums) {
        vector<vector<int>> res;
        sort(nums.begin(),nums.end());
        
        permuterecursive(nums,0,res);
        return res;
    }
    
    void permuterecursive(vector<int> nums, int pos, vector<vector<int>>& res){
        if(pos==nums.size()){
            res.push_back(nums);
        }
        
        else{
            for(int i=pos;i<nums.size();i++){
                if(i>pos && nums[pos]==nums[i]) continue;
                swap(nums[pos],nums[i]);
                permuterecursive(nums,pos+1,res);
            }
        }
    }
};
