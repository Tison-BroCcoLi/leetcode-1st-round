//#145 Binary Tree PostorderTraversal
// recursive solution

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        vector<int> res;
        
        if(root == NULL) return res;
        
        vector<int> leftTraversal = postorderTraversal(root->left);
        vector<int> rightTraversal = postorderTraversal(root->right);
        
        leftTraversal.insert(leftTraversal.end(), rightTraversal.begin(), rightTraversal.end());
        res.insert(res.end(), leftTraversal.begin(), leftTraversal.end());
        res.push_back(root->val);
        
        return res;
    }
};
