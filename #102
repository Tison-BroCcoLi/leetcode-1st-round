// #102 Binary Tree Level Order Traversal
// using a queue

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> res;
        
        if(root == NULL) return res;
        
        queue<TreeNode*> scan;
        scan.push(root);
        while(!scan.empty()){
            vector<int> eachline;
            int num = scan.size();
            for(int i = 0; i < num; i++){
                TreeNode* temp = scan.front();
                eachline.push_back(temp->val);
                if(temp->left != NULL) scan.push(temp->left);
                if(temp->right != NULL) scan.push(temp->right);
                scan.pop();
            }
            res.push_back(eachline);
        }
        
        return res;
    }
};
