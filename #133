// #133 Clone Graph
// DFS

/**
 * Definition for undirected graph.
 * struct UndirectedGraphNode {
 *     int label;
 *     vector<UndirectedGraphNode *> neighbors;
 *     UndirectedGraphNode(int x) : label(x) {};
 * };
 */
class Solution {
public:
    UndirectedGraphNode *cloneGraph(UndirectedGraphNode *node) {
        if (!node) return NULL;
        if (map.find(node) == map.end()) {
            map[node] = new UndirectedGraphNode(node -> label);
            for (UndirectedGraphNode* adj : node -> neighbors)
                map[node] -> neighbors.push_back(cloneGraph(adj));
        }
        return map[node];
    } 
private:
    unordered_map<UndirectedGraphNode*, UndirectedGraphNode*> map;
};
