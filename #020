//#020 Valid Parentheses

//用三个整数记录三种左括号分别出现的次数，用一个数组记录出现的顺序
//每出现一个右括号，判断其是否是第一个要匹配的，清除最后一个数组元素，并使相应的左括号数量减1，否则false
//循环结束后，保证各左括号数量都是0，为true，反之为false

class Solution {
public:
    bool isValid(string s) {
        int length=s.size();
        if(length%2==1) return false;
        if(length==0) return true;
        
        int sbckt=0;
        int mbckt=0;
        int bbckt=0;
        int *rneed=new int[length/2];
        for(int i=0;i<length/2;i++){
            rneed[i]=0;
        }
        
        int index=0;
        for(int i=0;i<length;i++){
            char ch=s[i];
            if(ch=='('){
                sbckt++;
                rneed[index]=1;
                index++;
                continue;
            }
            
            if(ch=='['){
                mbckt++;
                rneed[index]=2;
                index++;
                continue;
            }
            
            if(ch=='{'){
                bbckt++;
                rneed[index]=3;
                index++;
                continue;
            }
            
            if(ch==')'){
                if(rneed[index-1]!=1 || sbckt<=0) return false;
                else{
                    index--;
                    sbckt--;
                    continue;
                }
            }
            
            if(ch==']'){
                if(rneed[index-1]!=2 || mbckt<=0) return false;
                else{
                    index--;
                    mbckt--;
                    continue;
                }
            }
            
            if(ch=='}'){
                if(rneed[index-1]!=3 || bbckt<=0) return false;
                else{
                    index--;
                    bbckt--;
                    continue;
                }
            }
        }
        
        if(sbckt==0 && mbckt==0 && bbckt==0) return true;
        else return false;
    }
};
